#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

#define MAX_BOOKS 5
#define MAX_TITLE_LEN 50
#define MAX_AUTHOR_LEN 30
#define MAX_PRESS_LEN 30

typedef struct {
    char title[MAX_TITLE_LEN];
    char authors[MAX_AUTHOR_LEN];
    char press[MAX_PRESS_LEN];
    int page;
    int price;
    char borrow[12];
} Book;

void displayMenu();
void displayBookList(Book books[], int count);
void searchBook(Book books[], int count);
void borrowBook(Book books[], int count);
void returnBook(Book books[], int count);

int main() {
    Book books[MAX_BOOKS] = {
        {"Truth", "John", "Century", 300, 20000, "대출가능"},
        {"Love", "Paul", "Goods", 200, 15000, "대출가능"},
        {"Joy", "James", "Cookie", 250, 18000, "대출가능"},
        {"Thanks", "Mark", "Saesong", 240, 21000, "대출가능"},
        {"God", "Johnson", "Jungjo", 450, 35000, "대출가능"}
    };

    int choice;

    do {
        displayMenu();
        printf("선택하세요: ");
        scanf_s("%d", &choice);

        switch (choice) {
        case 1:
            displayBookList(books, MAX_BOOKS);
            break;
        case 2:
            searchBook(books, MAX_BOOKS);
            break;
        case 3:
            borrowBook(books, MAX_BOOKS);
            break;
        case 4:
            returnBook(books, MAX_BOOKS);
            break;
        case 5:
            printf("프로그램을 종료합니다. 안녕히 가세요!\n");
            break;
        default:
            printf("잘못된 선택입니다. 다시 시도하세요.\n");
        }

    } while (choice != 5);

    return 0;
}

void displayMenu() {
    printf("\n[1] [도서목록]\n");
    printf("[2] [검색]\n");
    printf("[3] [대출]\n");
    printf("[4] [반납]\n");
    printf("[5] [종료]\n");
}

void displayBookList(Book books[], int count) {
    printf("\nTitle\tAuthors\tPress\tPage\tPrice\tBorrow\n");
    printf("-----\t-------\t-----\t----\t-----\n");

    for (int i = 0; i < count; ++i) {
        printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].title, books[i].authors, books[i].press, books[i].page, books[i].price, books[i].borrow);
    }
}

void searchBook(Book books[], int count) {
    char searchTitle[MAX_TITLE_LEN];
    int found = 0;

    printf("검색할 도서를 입력하세요: ");
    scanf_s("%s", searchTitle, (unsigned)sizeof(searchTitle));

    for (int i = 0; i < count; ++i) {
        if (_stricmp(searchTitle, books[i].title) == 0) {
            printf("\n제목\t지은이\t출판사\t페이지\t가격\t대출\n");
            printf("-----\t-------\t-----\t----\t-----\t------\n");
            printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].title, books[i].authors, books[i].press,
                books[i].page, books[i].price, books[i].borrow);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("도서관에 해당 도서가 없습니다.\n");
    }
}

void borrowBook(Book books[], int count) {
    char borrowTitle[MAX_TITLE_LEN];
    int found = 0;

    printf("대출할 도서를 입력하세요: ");
    scanf_s("%s", borrowTitle, (unsigned)sizeof(borrowTitle));

    for (int i = 0; i < count; ++i) {
        if (_stricmp(borrowTitle, books[i].title) == 0) {
            if (_stricmp(books[i].borrow, "대출가능") == 0) {
                printf("도서 '%s'가 대출되었습니다.\n", books[i].title);
                strcpy_s(books[i].borrow, sizeof(books[i].borrow), "대출중");
            }
            else {
                printf("도서 '%s'는 이미 대출 중입니다.\n", books[i].title);
            }
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("도서관에 해당 도서가 없습니다.\n");
    }
}

void returnBook(Book books[], int count) {
    char returnTitle[MAX_TITLE_LEN];
    int found = 0;

    printf("반납할 도서를 입력하세요: ");
    scanf_s("%s", returnTitle, (unsigned)sizeof(returnTitle));

    for (int i = 0; i < count; ++i) {
        if (_stricmp(returnTitle, books[i].title) == 0) {
            if (_stricmp(books[i].borrow, "대출중") == 0) {
                printf("도서 '%s'가 반납되었습니다.\n", books[i].title);
                strcpy_s(books[i].borrow, sizeof(books[i].borrow), "대출가능");
            }
            else {
                printf("도서 '%s'는 대출되지 않았습니다.\n", books[i].title);
            }
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("도서관에 해당 도서가 없습니다.\n");
    }
}
