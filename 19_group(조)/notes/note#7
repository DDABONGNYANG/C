포인터 변수는 메모리의 위치를 가리킨다는 의미에서 포인터라 부른다
 a라는 변수가 있을 때, a라는 변수가 저장되어 있는 매모리 위치를 알고 싶을 때 &를 붙이면 된다.
 ex.) printf("a의 주소 값 : %p\n", &a);
     출력: a의 주솟값 : 0012fc7



Q.왜 C언어에서 포인터가 중요한 것일까.?
A. 
 1. 포인터를 사용하면 메모리를 효율적으로 활용할 수 있다.?
변수의 주소를 저장하고 해당 주소를 참조하여 변수에 접근할 수 있기 때문에, 데이터를 직접 조작할 수 있다. 이는 복사본을 만들지 않고 직접 데이터를 조작하여 메모리를 절약하고 처리 속도를 향상시킬 수 있게 된다.
2. 함수에서 포인터를 사용하면 함수 간에 데이터를 전달할 수 있다. 값에 의한 전달로는 변수를 복사하여 전달하는데, 이는 메모리 사용 면에서 비효율적일 수 있다. 그러나 포인터를 활용하면 메모리의 주소를 전달하여 데이터를 직접 조작할 수 있어, 이는 프로그램 성능을 향상시키는 데 도움이 된다.
3. 동적 메모리 할당을 위해서도 포인터가 필요하다. 프로그램이 실행 중에 메모리를 동적으로 할당하거나 해제할 수 있게 되어, 이는 유연한 프로그래밍을 가능하게 해준다.
따라서 포인터는 C 언어에서 메모리 관리, 데이터 조작, 함수 간 데이터 전달 등 다양한 면에서 중요한 역할을 한다.


swap함수 호출시 인자가 포인터로 선언되어 x,y의 주소로 전달되므로
x,y에 swap함수에전달된다. 포인터를 함수의 인자로사용하여 주소값전달을할수있어 변수
그대로 함수에 전달되어 값을 바꿀수있다.


//예제 10-04
01 #include <stdio.h>                                
02
03 void Swap(int* a, int* b);
04 int main(void)
05 {
06 int x = 10, y = 5;
07 printf("Swap() 함수 실행 전\n");
08 printf("x = %d, y = %d이다.\n\n", x, y);   <주소를 전달한 포인터를이용한 프로그램>
09
10 Swap(&x, &y);
11 printf("Swap() 함수 실행 후\n");
12 printf("x = %d, y = %d이다.\n", x, y);
13
14 return 0;
17 void Swap(int* a, int* b)
18 {
19 int temp;
20 temp = *a;
21 *a = *b;
22 *b = temp;
23 }

변수 x, y는 main( ) 함수에서 선언한 지역변수이기 때문에 메모리에 살아 있어 
원래 값 그대로 출력한다.
따라서 실행 전과 실행 후의 값이 같다.


실행 방법:
 포인터를 변경을하면 메모리상에서 기존에는 포인터값을 그대로 넘기면
메인함수에서 swap을 호출하고 x,y에 주소값을 연결하고 x.y주소값을 메인에서 넣어
만들어진다.temp에다가 a의 주소값을넣고 y에 있는 5를 b에넣고 temp에있는값을 y에넣는다
로컬주소가아니라 현재 메인에있는 주소값을 넣었기때문에 실제로 값이나온다.
 결론 을 복사하기 때문에 함수에서 인자 값을 바꾸더라도 main( ) 함수는 영향을
받지 않으므로 두 함수는 독립적이고 안전하다.


